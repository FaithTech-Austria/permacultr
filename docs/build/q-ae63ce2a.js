import{p as U}from"./q-e9d9a766.js";function C(r,t,f){if(r!==null)for(var i,s,P,y,k,n,c,b=0,o=0,g,u=r.type,w=u==="FeatureCollection",G=u==="Feature",S=w?r.features.length:1,e=0;e<S;e++){c=w?r.features[e].geometry:G?r.geometry:r,g=c?c.type==="GeometryCollection":!1,k=g?c.geometries.length:1;for(var v=0;v<k;v++){var l=0,h=0;if(y=g?c.geometries[v]:c,y!==null){n=y.coordinates;var a=y.type;switch(b=f&&(a==="Polygon"||a==="MultiPolygon")?1:0,a){case null:break;case"Point":if(t(n,o,e,l,h)===!1)return!1;o++,l++;break;case"LineString":case"MultiPoint":for(i=0;i<n.length;i++){if(t(n[i],o,e,l,h)===!1)return!1;o++,a==="MultiPoint"&&l++}a==="LineString"&&l++;break;case"Polygon":case"MultiLineString":for(i=0;i<n.length;i++){for(s=0;s<n[i].length-b;s++){if(t(n[i][s],o,e,l,h)===!1)return!1;o++}a==="MultiLineString"&&l++,a==="Polygon"&&h++}a==="Polygon"&&l++;break;case"MultiPolygon":for(i=0;i<n.length;i++){for(h=0,s=0;s<n[i].length;s++){for(P=0;P<n[i][s].length-b;P++){if(t(n[i][s][P],o,e,l,h)===!1)return!1;o++}h++}l++}break;case"GeometryCollection":for(i=0;i<y.geometries.length;i++)if(C(y.geometries[i],t,f)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function M(r){var t=[1/0,1/0,-1/0,-1/0];return C(r,function(f){t[0]>f[0]&&(t[0]=f[0]),t[1]>f[1]&&(t[1]=f[1]),t[2]<f[0]&&(t[2]=f[0]),t[3]<f[1]&&(t[3]=f[1])}),t}M.default=M;const L=(r,t)=>{const f=M(t);r.fitBounds(f,{animate:!1})};export{U as _hW,L as s_kzyDb6oqOtU};
